// ==================== Sequence ====================

sequence( r A1  GGCAUCAAGUGUAGUAUCCGAAAGGAUACAGAGAAGAUGCC )
//              ((((((..((((((((((((..)))))).))))))))))))

// ==================== Library ====================

//----- Fragment 1 -----
ncm_01 = library(
    pdb( "DB/2_2/GGCC/*.pdb.gz" )
    #1:#2, #3:#4 <- A1:A2, A40:A41
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_02 = library(
    pdb( "DB/2_2/GCGC/*.pdb.gz" )
    #1:#2, #3:#4 <- A2:A3, A39:A40
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_03 = library(
    pdb( "DB/2_2/CAUG/*.pdb.gz" )
    #1:#2, #3:#4 <- A3:A4, A38:A39
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_04 = library(
    pdb( "DB/2_2/AUAU/*.pdb.gz" )
    #1:#2, #3:#4 <- A4:A5, A37:A38
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_05 = library(
    pdb( "DB/2_2/UCGA/*.pdb.gz" )
    #1:#2, #3:#4 <- A5:A6, A36:A37
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_06 = library(
    pdb( "DB/4_2/CAAGAG/*.pdb.gz" )
    #1:#4, #5:#6 <- A6:A9, A35:A36
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_07 = library(
    pdb( "DB/2_2/GUAA/*.pdb.gz" )
    #1:#2, #3:#4 <- A9:A10, A34:A35
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_08 = library(
    pdb( "DB/2_2/UGGA/*.pdb.gz" )
    #1:#2, #3:#4 <- A10:A11, A33:A34
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_09 = library(
    pdb( "DB/2_2/GUAG/*.pdb.gz" )
    #1:#2, #3:#4 <- A11:A12, A32:A33
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_10 = library(
    pdb( "DB/2_2/UAGA/*.pdb.gz" )
    #1:#2, #3:#4 <- A12:A13, A31:A32
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_11 = library(
    pdb( "DB/2_2/AGAG/*.pdb.gz" )
    #1:#2, #3:#4 <- A13:A14, A30:A31
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_12 = library(
    pdb( "DB/2_3/GUACA/*.pdb.gz" )
    #1:#2, #3:#5 <- A14:A15, A28:A30
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_13 = library(
    pdb( "DB/2_2/UAUA/*.pdb.gz" )
    #1:#2, #3:#4 <- A15:A16, A27:A28
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_14 = library(
    pdb( "DB/2_2/AUAU/*.pdb.gz" )
    #1:#2, #3:#4 <- A16:A17, A26:A27
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_15 = library(
    pdb( "DB/2_2/UCGA/*.pdb.gz" )
    #1:#2, #3:#4 <- A17:A18, A25:A26
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_16 = library(
    pdb( "DB/2_2/CCGG/*.pdb.gz" )
    #1:#2, #3:#4 <- A18:A19, A24:A25
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_17 = library(
    pdb( "DB/2_2/CGAG/*.pdb.gz" )
    #1:#2, #3:#4 <- A19:A20, A23:A24
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
ncm_18 = library(
    pdb( "DB/4/GAAA/*.pdb.gz" )
    #1:#4 <- A20:A23
//  rmsd( 0.5 sidechain && !( pse || lp || hydrogen ) ) 
)
// ===================== Backtrack =====================
structure = backtrack
(
    ncm_01
    merge( ncm_02  1.5 )
    merge( ncm_03  1.5 )
    merge( ncm_04  1.5 )
    merge( ncm_05  1.5 )
    merge( ncm_06  1.5 )
    merge( ncm_07  1.5 )
    merge( ncm_08  1.5 )
    merge( ncm_09  1.5 )
    merge( ncm_10  1.5 )
    merge( ncm_11  1.5 )
    merge( ncm_12  1.5 )
    merge( ncm_13  1.5 )
    merge( ncm_14  1.5 )
    merge( ncm_15  1.5 )
    merge( ncm_16  1.5 )
    merge( ncm_17  1.5 )
    merge( ncm_18  1.5 )
    //------ dangling ends --------
)

// =================== Backtrack Restraints ===================
clash
(
    structure
    1.5 !( pse || lp || hydrogen )
)
backtrack_rst
(
    structure
    width_limit  = 25%,
    height_limit = 33%,
    method       = probabilistic
)
// =================== Ribose Restraints ===================
ribose_rst
(
    structure
    method    = ccm,
    pucker    = C3p_endo,
    threshold = 2.0
)
// =================== Exploration Initialization =========
explore
(
    structure
    option(
    model_limit = 1000,
    time_limit  = 30m,
    seed        = 3210 )
    rmsd( 3.0 sidechain && !( pse || lp || hydrogen ) )
    pdb( "struct_000060360" zipped )
)
